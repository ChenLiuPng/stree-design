$namespace: 's-';

@mixin blockquote($block) {
  $blockName: $namespace + $block !global;
  .#{$blockName} {
    @content;
  }
}

@mixin bgColor($color) {
  @each $key, $value in $color {
    &.#{$blockName}-#{$key} {
      background-color: #{$value};
    }
  }
}
@mixin textColor($color) {
  @each $key, $value in $color {
    &.#{$blockName}-#{$key} {
      color: #{$value} !important;
      svg {
        fill: #{$value} !important;
      }
    }
  }
}

@mixin borderContent($color) {
  @each $key, $value in $color {
    .#{$blockName}-#{$key}__content {
      border: 1px solid #{$value};
      position: absolute;
      left: 0;
      top: 0;
      right: 0;
      bottom: 0;
      border-radius: inherit;
      pointer-events: none;
    }
  }
}

@mixin dashed($color) {
  @each $key, $value in $color {
    .#{$blockName}-#{$key}-border--dashed {
      border-style: dashed !important;
      background-color: #fff;
      z-index: -1;
    }
    .#{$blockName}-#{$key}--dashed {
      color: #{$value} !important;
    }
    
  }
}


@mixin shaDow($color) {
  @each $key, $value in $color {
    .button-wave-spread-#{$key} {
      z-index: -1;
      animation-name: #{$key}-warn;
    }
  @keyframes #{$key}-warn {
    from{
      box-shadow: 0 0 0.5px 0 #{$value};
      opacity: 1;
    }
    to{
      // don't use exact 5px since chrome will display the animation with glitches
      box-shadow: 0 0 0.5px 4.5px #{$value};
      opacity: 0;
    }
  }
}
}

@mixin sizePadding($size) {
  @each $key, $value in $size {
    &.#{$blockName}-#{$key}-padding {
      padding: #{$value};
    }
  }
}

@mixin sizeFontSize($size) {
  @each $key, $value in $size {
    &.#{$blockName}-#{$key}-font-size {
      font-size: #{$value};
    }
  }
}

@mixin sizeHeight($size) {
  @each $key, $value in $size {
    &.#{$blockName}-#{$key}-height {
      height: #{$value};
    }
  }
}
